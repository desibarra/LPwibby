import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import { fileURLToPath } from 'node:url';
import path from 'node:path';

// Configuración de rutas
const __dirname = path.dirname(fileURLToPath(import.meta.url));

export default defineConfig({
  // Configuración base (importante si tienes el frontend en subdirectorio)
  base: '/',
  
  // Plugins principales
  plugins: [react()],
  
  // Configuración de resolución
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './client/src'),
      '@components': path.resolve(__dirname, './client/src/components'),
      '@pages': path.resolve(__dirname, './client/src/pages'),
      '@assets': path.resolve(__dirname, './client/src/assets')
    },
    extensions: ['.ts', '.tsx', '.js', '.jsx', '.json']
  },
  
  // Configuración del servidor de desarrollo
  server: {
    host: '127.0.0.1',
    port: 3000,
    strictPort: true,
    open: true,
    proxy: {
      '/api': {
        target: 'http://localhost:5000', // Tu backend
        changeOrigin: true,
        secure: false
      }
    }
  },
  
  // Configuración de build
  build: {
    outDir: '../dist/client',
    emptyOutDir: true,
    sourcemap: true,
    rollupOptions: {
      output: {
        assetFileNames: 'assets/[name]-[hash][extname]',
        chunkFileNames: 'js/[name]-[hash].js',
        entryFileNames: 'js/[name]-[hash].js'
      }
    }
  },
  
  // Configuración de CSS
  css: {
    modules: {
      localsConvention: 'camelCaseOnly'
    },
    preprocessorOptions: {
      scss: {
        additionalData: `@import "@assets/styles/variables.scss";`
      }
    }
  },
  
  // Configuración de optimización
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'react-router-dom',
      '@tanstack/react-query'
    ]
  }
});